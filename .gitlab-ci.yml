###without aws#######
#image: eclipse-temurin:17-alpine
#
#
#stages:
#  - build
#  - test
#
#build:
#  stage: build
#  script:
#    - ./gradlew assemble
#  artifacts:
#    paths:
#      - build/libs/*.jar
#test:
#  stage: test
#  script:
#    ./gradlew test
#  artifacts:
#    paths:
#      - build/test-results/test/TEST*.xml
######with aws###########
stages:
  - build
  - test
  - docker

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME

build-job:
  image: eclipse-temurin:17
  stage: build
  script:
    - ./gradlew assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build/**
      - .gradle
  artifacts:
    untracked: false
    when: on_success
    access: all
    expire_in: 30 days
    paths:
      - build/libs/*.jar

test-job:
  image: eclipse-temurin:17
  stage: test
  script:
    - ./gradlew test
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build/**
      - .gradle
  artifacts:
    untracked: false
    when: on_failure
    access: all
    expire_in: 30 days
    paths:
      - build/reports/tests

docker:
  stage: docker
  needs:
    - build-job
    - test-job
  image:
    name: gcr.io/kaniko-project/executor:v1.15.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:$CI_PIPELINE_IID"
      --destination "${CI_REGISTRY_IMAGE}:latest"
      --cleanup
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build/**
      - .gradle